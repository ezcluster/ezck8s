# Copyright (C) 2020 BROADSoftware
#
# This file is part of EzCluster
#
# EzCluster is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# EzCluster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with EzCluster.  If not, see <http://www.gnu.org/licenses/lgpl-3.0.html>.


# This main-v1 is for topolvm v0.5.2 or v0.5.3

- name: Install k8s ansible module required package
  yum: name=python2-openshift state=present

- name: Protect system namespaces from TopoLVM webhook
  shell: "{{topolvm_kubectl}} label --overwrite ns kube-system topolvm.cybozu.com/webhook=ignore"
  register: result
  run_once: true
  changed_when: result.stdout_lines[0].find('not labeled') == -1
  when: topolvm_state == 'present'

- name: Unprotect system namespaces from TopoLVM webhook
  shell: "{{topolvm_kubectl}} label --overwrite ns kube-system topolvm.cybozu.com/webhook-"
  register: result
  run_once: true
  changed_when: result.stdout_lines[0].find('not found') == -1
  when: topolvm_state == 'absent'
  
#- debug: var=result
#  when: topolvm_state == 'absent'
  
- name: Add a label on topolvm nodes to select them for daemonset
  shell: "{{topolvm_kubectl}} label nodes {{item}} --overwrite topology.topolvm.cybozu.com=true"
  with_items: "{{groups['_topolvm_']}}"
  register: result
  run_once: true
  changed_when: result.stdout_lines[0].find('not labeled') == -1
  when: topolvm_state == 'present'

- name: Remove label on topolvm nodes to select them for daemonset
  shell: "{{topolvm_kubectl}} label nodes {{item}} --overwrite topology.topolvm.cybozu.com-"
  with_items: "{{groups['_topolvm_']}}"
  register: result
  run_once: true
  changed_when: result.stdout_lines[0].find('not found') == -1
  when: topolvm_state == 'absent'

#- debug: var=result
#  when: topolvm_state == 'absent'

- name: Setup main manifest
  template:
    src: "v{{ topolvm_version}}/manifest.yaml.j2"
    dest: /tmp/manifest.yaml
  run_once: true
 
 # NB: We may need to take some time between applying manifests. And give another chance with retry
- name: Apply  main manifest
  k8s:
    state: "{{topolvm_state}}"
    src: "/tmp/manifest.yaml"
  run_once: true
  register: result
  retries: 3
  delay: 3
  until: not result.failed
  
- name: Setup storage classes
  template:
    src: "storage_classes.yaml.j2"
    dest: /tmp/storage_classes.yaml
  run_once: true
 
- name: Apply storage classes manifest
  k8s:
    state: "{{topolvm_state}}"
    src: "/tmp/storage_classes.yaml"
  run_once: true
  

    