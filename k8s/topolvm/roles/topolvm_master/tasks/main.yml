# Copyright (C) 2022 BROADSoftware
#
# This file is part of EzCluster
#
# EzCluster is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# EzCluster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with EzCluster.  If not, see <http://www.gnu.org/licenses/lgpl-3.0.html>.


# ------------------------------------------------------ Preparation

- name: Protect system namespaces from TopoLVM webhook
  shell: "{{topolvm_kubectl}} label --overwrite ns kube-system topolvm.cybozu.com/webhook=ignore"
  register: result
  run_once: true
  changed_when: result.stdout_lines[0].find('not labeled') == -1
  when: topolvm_state == 'present'

- name: Unprotect system namespaces from TopoLVM webhook
  shell: "{{topolvm_kubectl}} label --overwrite ns kube-system topolvm.cybozu.com/webhook-"
  register: result
  run_once: true
  changed_when: result.stdout_lines[0].find('not found') == -1
  when: topolvm_state == 'absent'


- name: Add a label on topolvm nodes to select them for daemonset
  shell: "{{topolvm_kubectl}} label nodes {{item}} --overwrite topology.topolvm.cybozu.com=true"
  with_items: "{{groups['_topolvm_']}}"
  register: result
  run_once: true
  changed_when: result.stdout_lines[0].find('not labeled') == -1
  when: topolvm_state == 'present'

- name: Remove label on topolvm nodes to select them for daemonset
  shell: "{{topolvm_kubectl}} label nodes {{item}} --overwrite topology.topolvm.cybozu.com-"
  with_items: "{{groups['_topolvm_']}}"
  register: result
  run_once: true
  changed_when: result.stdout_lines[0].find('not found') == -1
  when: topolvm_state == 'absent'

# ----------------------------------------- Deployment

- name: Create topolvm namespace
  k8s:
    state: present
    definition:
      api_version: v1
      kind: Namespace
      metadata:
        name: "{{ topolvm_namespace }}"
        labels:
          topolvm.cybozu.com/webhook: ignore
  when: topolvm_state == 'present'

- name: Copy preset file
  template:
    src: topolvm-preset.yaml.j2
    dest: /tmp/topolvm-preset.yaml
  run_once: true

- name: Apply preset file
  k8s:
    state: present
    src: "/tmp/topolvm-preset.yaml"
  run_once: true

- name: Setup value file
  template:
    src: "values.yaml.j2"
    dest: /tmp/topolvm_values.yaml
  run_once: true
  when: topolvm_state == 'present'

- name: Deploy topolvm helm chart
  kubernetes.core.helm:
    release_state: "{{topolvm_state}}"
    release_name: topolvm
    release_namespace: "{{ topolvm_namespace }}"
    create_namespace: false
    chart_ref: "{{ topolvm_helm_chart_url }}"
    force: true
    values_files:
      - /tmp/topolvm_values.yaml
  run_once: true

# ---- Patch imagePullSecret in deployment

- name: Add immagePullSecret to deployment and daemonset
  block:

  - name: Copy patch file
    template:
      src: patch-image-pull.yaml.j2
      dest: /tmp/patch-image-pull.yaml

  - name: Add immagePullSecret to controller deployment
    shell: "{{topolvm_kubectl}} -n {{ topolvm_namespace }} patch deployment topolvm-controller  --patch-file /tmp/patch-image-pull.yaml"

  - name: Add immagePullSecret to node daemonset
    shell: "{{topolvm_kubectl}} -n {{ topolvm_namespace }} patch daemonset topolvm-node  --patch-file /tmp/patch-image-pull.yaml"

  - name: Add immagePullSecret to scheduler daemonset
    shell: "{{topolvm_kubectl}} -n {{ topolvm_namespace }} patch daemonset topolvm-scheduler  --patch-file /tmp/patch-image-pull.yaml"

  when: topolvm_state == 'present' and topolvm_dockerconfigjson is defined and topolvm_dockerconfigjson
  run_once: true



# --------------------------------- Cleanup

- name: Remove topolvm namespace
  k8s:
    state: absent
    definition:
      api_version: v1
      kind: Namespace
      metadata:
        name: "{{ topolvm_namespace }}"
  when: topolvm_state == 'absent'
